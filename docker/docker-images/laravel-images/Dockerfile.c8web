FROM centos:8
ENV container=docker \
    TZ=Asia/Taipei

RUN yum -y update; \
    yum clean all; \
    (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \
    systemd-tmpfiles-setup.service ] || rm -f $i; done); \
    rm -f /lib/systemd/system/multi-user.target.wants/*;\
    rm -f /etc/systemd/system/*.wants/*;\
    rm -f /lib/systemd/system/local-fs.target.wants/*; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -f /lib/systemd/system/basic.target.wants/*;\
    rm -f /lib/systemd/system/anaconda.target.wants/*;

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN yum -y install epel-release && \
    yum -y install bash-completion net-tools wget git tree yum-utils vim && \
    yum -y install http://rpms.famillecollet.com/enterprise/remi-release-8.rpm && \
    yum module enable -y php:remi-7.4
RUN yum -y install \
    php \
    php-fpm \
    php-opcache \
    php-bcmath \
    php-gd \
    php-ldap \
    php-mcrypt \
    php-mysqlnd \
    php-pdo \
    php-pear \
    php-mbstring \
    php-pecl-igbinary \
    php-pecl-imagick \
    php-pecl-memcached \
    php-pecl-redis \
    php-pecl-zip \
    php-process \
    php-soap \
    php-xml \
    php-xmlrpc \
    php-devel \
    php-pecl-xdebug \
    php-gmp && \
    cp /etc/php.ini /etc/php.ini.orig && \
    mv /etc/php-fpm.d/www.conf /etc/php-fpm.d/www.conf.orig && \
    systemctl enable php-fpm && \
    yum -y install nginx && \
    cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.orig && \
    mkdir -p /etc/nginx/ssl && \
    mkdir -p /etc/nginx/conf.d && \
    mkdir -p /etc/nginx/site-available && \
    mkdir -p /etc/php74 && \
    systemctl enable nginx && \
    mkdir -p /root/downloads && \
    yum -y install python2-pip.noarch && \
    pip2 install --upgrade pip && \
    pip2 install --upgrade python-gitlab argcomplete termcolor python-dotenv jinja2 && \
    activate-global-python-argcomplete && \
    echo 'PATH=$PATH:/tools/web:/tools/local_container_tools_web' >> ~/.bashrc && \
    echo 'eval "$(register-python-argcomplete web_tools.py)"' >> ~/.bashrc && \
    mkdir /tools && \
    mkdir /root/dev && \
    mkdir /var/log/xdebug

COPY ["nginx/nginx_conf/nginx.conf", "nginx/vhost/default.conf", "files/composer-install.sh", "/root/downloads/"]

RUN mv -f /root/downloads/nginx.conf /etc/nginx/nginx.conf && \
    mv -f /root/downloads/default.conf /etc/nginx/conf.d/default.conf && \
    cd /root/downloads && \
    chmod 0775 /root/downloads/composer-install.sh && \
    /root/downloads/composer-install.sh && \
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash && \
    source ~/.bashrc && \
    nvm install --lts && \
    nvm use default && \
    npm install -g yarn && \
    yum clean all && \
    cp /etc/php-fpm.conf /etc/php-fpm.conf.orig && \
    echo "include=/etc/php74/*.conf" >> /etc/php-fpm.conf && \
    echo "xdebug.remote_enable=1" >> /etc/php.d/15-xdebug.ini && \
    echo "xdebug.remote_port=9000" >> /etc/php.d/15-xdebug.ini && \
    echo "xdebug.remote_autostart=1" >> /etc/php.d/15-xdebug.ini && \
    echo "xdebug.remote_connect_back=0" >> /etc/php.d/15-xdebug.ini && \
    echo "xdebug.remote_handler=dbgp" >> /etc/php.d/15-xdebug.ini && \
    echo "xdebug.max_nesting_level=250" >> /etc/php.d/15-xdebug.ini && \
    echo 'xdebug.remote_log="/var/log/xdebug/php74-xdebug.log"' >> /etc/php.d/15-xdebug.ini && \
    echo "xdebug.remote_host=docker.for.mac.localhost" >> /etc/php.d/15-xdebug.ini && \
    echo "xdebug.idekey=docker" >> /etc/php.d/15-xdebug.ini

EXPOSE 80 443
VOLUME ["/sys/fs/cgroup"]

CMD ["/usr/sbin/init"]
